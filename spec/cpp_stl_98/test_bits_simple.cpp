// Autogenerated from KST: please remove this line if doing any edits by hand!

#include <boost/test/unit_test.hpp>
#include "bits_simple.h"
#include <iostream>
#include <fstream>
#include <vector>

BOOST_AUTO_TEST_CASE(test_bits_simple) {
    std::ifstream ifs("src/fixed_struct.bin", std::ifstream::binary);
    kaitai::kstream ks(&ifs);
    bits_simple_t* r = new bits_simple_t(&ks);

    BOOST_CHECK_EQUAL(r->byte_1(), 80);
    BOOST_CHECK_EQUAL(r->byte_2(), 65);
    BOOST_CHECK_EQUAL(r->bits_a(), false);
    BOOST_CHECK_EQUAL(r->bits_b(), 4);
    BOOST_CHECK_EQUAL(r->bits_c(), 3);
    BOOST_CHECK_EQUAL(r->large_bits_1(), 300);
    BOOST_CHECK_EQUAL(r->spacer(), 5);
    BOOST_CHECK_EQUAL(r->large_bits_2(), 1329);
    BOOST_CHECK_EQUAL(r->normal_s2(), -1);
    BOOST_CHECK_EQUAL(r->byte_8_9_10(), 5259587);
    BOOST_CHECK_EQUAL(r->byte_11_to_14(), 1261262125);
    BOOST_CHECK_EQUAL(r->byte_15_to_19(), 293220057087LL);
    BOOST_CHECK_EQUAL(r->byte_20_to_27(), 18446744073709551615ULL);
    BOOST_CHECK_EQUAL(r->test_if_b1(), 123);

    delete r;
}
