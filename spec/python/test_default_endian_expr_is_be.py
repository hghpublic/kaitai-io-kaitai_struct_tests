# Autogenerated from KST: please remove this line if doing any edits by hand!

import unittest

from default_endian_expr_is_be import DefaultEndianExprIsBe

class TestDefaultEndianExprIsBe(unittest.TestCase):
    def test_default_endian_expr_is_be(self):
        with DefaultEndianExprIsBe.from_file('src/endian_expr.bin') as r:

            self.assertEqual(r.docs[0].indicator, b"\x49\x49")
            self.assertEqual(r.docs[0].main.some_int, 66)
            self.assertEqual(r.docs[0].main.some_int_be, 66)
            self.assertEqual(r.docs[0].main.some_int_le, 66)
            self.assertEqual(r.docs[0].main.inst_int, 66)
            self.assertEqual(r.docs[0].main.inst_sub.foo, 66)
            self.assertEqual(r.docs[1].indicator, b"\x4D\x4D")
            self.assertEqual(r.docs[1].main.some_int, 66)
            self.assertEqual(r.docs[1].main.some_int_be, 66)
            self.assertEqual(r.docs[1].main.some_int_le, 66)
            self.assertEqual(r.docs[1].main.inst_int, 1107296256)
            self.assertEqual(r.docs[1].main.inst_sub.foo, 1107296256)
            self.assertEqual(r.docs[2].indicator, b"\x58\x58")
            self.assertEqual(r.docs[2].main.some_int, 1107296256)
            self.assertEqual(r.docs[2].main.some_int_be, 66)
            self.assertEqual(r.docs[2].main.some_int_le, 66)
            self.assertEqual(r.docs[2].main.inst_int, 66)
            self.assertEqual(r.docs[2].main.inst_sub.foo, 66)
