// Autogenerated from KST: please remove this line if doing any edits by hand!

use std::fs;
extern crate kaitai;
use self::kaitai::*;
use rust::formats::expr_3::*;

#[test]
fn test_expr_3() -> KResult<()> {
    let bytes = fs::read("../../src/fixed_struct.bin").unwrap();
    let _io = BytesReader::from(bytes);
    let r: OptRc<Expr3> = Expr3::read_into(&_io, None, None)?;

    assert_eq!(*r.one(), 80);
    assert_eq!(*r.two(), "ACK");
    assert_eq!(*r.three()?, "@ACK");
    assert_eq!(*r.four()?, "_ACK_");
    assert_eq!(*r.is_str_eq()?, true);
    assert_eq!(*r.is_str_ne()?, false);
    assert_eq!(*r.is_str_lt()?, true);
    assert_eq!(*r.is_str_gt()?, false);
    assert_eq!(*r.is_str_le()?, true);
    assert_eq!(*r.is_str_ge()?, false);
    assert_eq!(*r.is_str_lt2()?, true);
    assert_eq!(*r.test_not()?, true);
    Ok(())
}
