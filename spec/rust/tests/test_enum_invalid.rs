// Autogenerated from KST: please remove this line if doing any edits by hand!

use std::fs;
extern crate kaitai;
use self::kaitai::*;
use rust::formats::enum_invalid::*;

#[test]
fn test_enum_invalid() -> KResult<()> {
    let bytes = fs::read("../../src/term_strz.bin").unwrap();
    let _io = BytesReader::from(bytes);
    let r: OptRc<EnumInvalid> = EnumInvalid::read_into(&_io, None, None)?;

    assert_eq!(*r.pet_1(), EnumInvalid_Animal::Dog);
    let n: i64 = (&*r.pet_2()).into();
    assert_eq!(n, 111);
    Ok(())
}
