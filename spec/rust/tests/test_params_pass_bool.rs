// Autogenerated from KST: please remove this line if doing any edits by hand!

use std::fs;
extern crate kaitai;
use self::kaitai::*;
use rust::formats::params_pass_bool::*;

#[test]
fn test_params_pass_bool() -> KResult<()> {
    let bytes = fs::read("../../src/term_strz.bin").unwrap();
    let _io = BytesReader::from(bytes);
    let r: OptRc<ParamsPassBool> = ParamsPassBool::read_into(&_io, None, None)?;

    assert_eq!(*r.s_false(), false);
    assert_eq!(*r.s_true(), true);
    assert_eq!(*r.seq_b1().arg(), true);
    assert_eq!(r.seq_b1().foo().len(), 1);
    assert_eq!(*r.seq_bool().arg(), false);
    assert_eq!(r.seq_bool().foo().len(), 2);
    assert_eq!(*r.literal_b1().arg(), false);
    assert_eq!(r.literal_b1().foo().len(), 2);
    assert_eq!(*r.literal_bool().arg(), true);
    assert_eq!(r.literal_bool().foo().len(), 1);
    assert_eq!(*r.inst_b1().arg(), true);
    assert_eq!(r.inst_b1().foo().len(), 1);
    assert_eq!(*r.inst_bool().arg(), false);
    assert_eq!(r.inst_bool().foo().len(), 2);
    Ok(())
}
