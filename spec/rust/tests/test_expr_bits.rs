// Autogenerated from KST: please remove this line if doing any edits by hand!

use std::fs;
extern crate kaitai;
use self::kaitai::*;
use rust::formats::expr_bits::*;

#[test]
fn test_expr_bits() -> KResult<()> {
    let bytes = fs::read("../../src/switch_opcodes.bin").unwrap();
    let _io = BytesReader::from(bytes);
    let r: OptRc<ExprBits> = ExprBits::read_into(&_io, None, None)?;

    assert_eq!(*r.a(), 2);
    assert_eq!(*r.enum_seq(), ExprBits_Items::Foo);
    assert_eq!(*r.byte_size(), vec![0x66u8, 0x6fu8]);
    assert_eq!(r.repeat_expr().len(), 2);
    assert_eq!(r.repeat_expr()[0 as usize], 111);
    assert_eq!(r.repeat_expr()[1 as usize], 98);
    assert_eq!(r.switch_on_type(), 97);
    assert_eq!(*r.switch_on_endian().foo(), 29184);
    assert_eq!(*r.enum_inst()?, ExprBits_Items::Bar);
    assert_eq!(*r.inst_pos()?, 111);
    Ok(())
}
