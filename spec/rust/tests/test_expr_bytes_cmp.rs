// Autogenerated from KST: please remove this line if doing any edits by hand!

use std::fs;
extern crate kaitai;
use self::kaitai::*;
use rust::formats::expr_bytes_cmp::*;

#[test]
fn test_expr_bytes_cmp() -> KResult<()> {
    let bytes = fs::read("../../src/fixed_struct.bin").unwrap();
    let _io = BytesReader::from(bytes);
    let r: OptRc<ExprBytesCmp> = ExprBytesCmp::read_into(&_io, None, None)?;

    assert_eq!(*r.one(), vec![0x50u8]);
    assert_eq!(*r.two(), vec![0x41u8, 0x43u8, 0x4bu8]);
    assert_eq!(*r.is_eq()?, true);
    assert_eq!(*r.is_ne()?, false);
    assert_eq!(*r.is_lt()?, true);
    assert_eq!(*r.is_gt()?, false);
    assert_eq!(*r.is_le()?, true);
    assert_eq!(*r.is_ge()?, false);
    assert_eq!(*r.is_lt2()?, false);
    assert_eq!(*r.is_gt2()?, true);
    Ok(())
}
