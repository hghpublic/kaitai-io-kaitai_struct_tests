// Autogenerated from KST: please remove this line if doing any edits by hand!

use std::fs;
extern crate kaitai;
use self::kaitai::*;
use rust::formats::params_pass_array_usertype::*;

#[test]
fn test_params_pass_array_usertype() -> KResult<()> {
    let bytes = fs::read("../../src/position_to_end.bin").unwrap();
    let _io = BytesReader::from(bytes);
    let r: OptRc<ParamsPassArrayUsertype> = ParamsPassArrayUsertype::read_into(&_io, None, None)?;

    assert_eq!(r.pass_blocks().bar().len(), 2);
    assert_eq!(*r.pass_blocks().bar()[0 as usize].foo(), 1);
    assert_eq!(*r.pass_blocks().bar()[1 as usize].foo(), 2);
    assert_eq!(*r.pass_blocks().one(), vec![0x3u8]);
    assert_eq!(*r.pass_blocks().two(), vec![0x4u8, 0x5u8]);
    Ok(())
}
