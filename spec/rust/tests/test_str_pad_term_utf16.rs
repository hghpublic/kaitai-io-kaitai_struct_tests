// Autogenerated from KST: please remove this line if doing any edits by hand!

use std::fs;
extern crate kaitai;
use self::kaitai::*;
use rust::formats::str_pad_term_utf16::*;

#[test]
fn test_str_pad_term_utf16() -> KResult<()> {
    let bytes = fs::read("../../src/str_pad_term_utf16.bin").unwrap();
    let _io = BytesReader::from(bytes);
    let r: OptRc<StrPadTermUtf16> = StrPadTermUtf16::read_into(&_io, None, None)?;

    assert_eq!(*r.str_term(), "a\u{200}b");
    assert_eq!(*r.str_term_include(), "c\u{200}d\u{0}");
    assert_eq!(*r.str_term_and_pad(), "e\u{200}f");
    Ok(())
}
