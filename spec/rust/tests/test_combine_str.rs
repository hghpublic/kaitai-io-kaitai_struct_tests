// Autogenerated from KST: please remove this line if doing any edits by hand!

use std::fs;
extern crate kaitai;
use self::kaitai::*;
use rust::formats::combine_str::*;

#[test]
fn test_combine_str() -> KResult<()> {
    let bytes = fs::read("../../src/term_strz.bin").unwrap();
    let _io = BytesReader::from(bytes);
    let r: OptRc<CombineStr> = CombineStr::read_into(&_io, None, None)?;

    assert_eq!(*r.str_term(), "foo");
    assert_eq!(*r.str_limit(), "bar|");
    assert_eq!(*r.str_eos(), "baz@");
    assert_eq!(*r.str_calc()?, "bar");
    assert_eq!(*r.str_calc_bytes()?, "baz");
    assert_eq!(*r.term_or_limit()?, "foo");
    assert_eq!(*r.term_or_eos()?, "baz@");
    assert_eq!(*r.term_or_calc()?, "foo");
    assert_eq!(*r.term_or_calc_bytes()?, "baz");
    assert_eq!(*r.limit_or_eos()?, "bar|");
    assert_eq!(*r.limit_or_calc()?, "bar");
    assert_eq!(*r.limit_or_calc_bytes()?, "bar|");
    assert_eq!(*r.eos_or_calc()?, "bar");
    assert_eq!(*r.eos_or_calc_bytes()?, "baz@");
    assert_eq!(*r.calc_or_calc_bytes()?, "baz");
    Ok(())
}
