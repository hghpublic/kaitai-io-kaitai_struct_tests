// Autogenerated from KST: please remove this line if doing any edits by hand!

use std::fs;
extern crate kaitai;
use self::kaitai::*;
use rust::formats::params_pass_struct::*;

#[test]
fn test_params_pass_struct() -> KResult<()> {
    let bytes = fs::read("../../src/enum_negative.bin").unwrap();
    let _io = BytesReader::from(bytes);
    let r: OptRc<ParamsPassStruct> = ParamsPassStruct::read_into(&_io, None, None)?;

    assert_eq!(*r.first().foo(), 255);
    assert_eq!(*r.one().bar().qux(), 1);
    assert_eq!(*Into::<OptRc<ParamsPassStruct_Block>>::into(&*r.one().foo()).foo(), 255);
    assert_eq!(*Into::<OptRc<ParamsPassStruct_Block>>::into(&*r.one().bar().foo()).foo(), 255);
    Ok(())
}
