// Autogenerated from KST: please remove this line if doing any edits by hand!

use std::fs;
extern crate kaitai;
use self::kaitai::*;
use rust::formats::nav_parent3::*;

#[test]
fn test_nav_parent3() -> KResult<()> {
    let bytes = fs::read("../../src/nav_parent2.bin").unwrap();
    let _io = BytesReader::from(bytes);
    let r: OptRc<NavParent3> = NavParent3::read_into(&_io, None, None)?;

    assert_eq!(*r.ofs_tags(), 8);
    assert_eq!(*r.num_tags(), 2);
    assert_eq!(*r.tags()?[0 as usize].name(), "RAHC");
    assert_eq!(*r.tags()?[0 as usize].ofs(), 32);
    assert_eq!(*r.tags()?[0 as usize].num_items(), 3);
    assert_eq!(*r.tags()?[0 as usize].tag_content()?.as_ref().unwrap().content(), "foo");
    assert_eq!(*r.tags()?[1 as usize].name(), "RAHC");
    assert_eq!(*r.tags()?[1 as usize].ofs(), 35);
    assert_eq!(*r.tags()?[1 as usize].num_items(), 6);
    assert_eq!(*r.tags()?[1 as usize].tag_content()?.as_ref().unwrap().content(), "barbaz");
    Ok(())
}
