// Autogenerated from KST: please remove this line if doing any edits by hand!

use std::fs;
extern crate kaitai;
use self::kaitai::*;
use rust::formats::recursive_one::*;

#[test]
fn test_recursive_one() -> KResult<()> {
    let bytes = fs::read("../../src/fixed_struct.bin").unwrap();
    let _io = BytesReader::from(bytes);
    let r: OptRc<RecursiveOne> = RecursiveOne::read_into(&_io, None, None)?;

    assert_eq!(*r.one(), 80);
    assert_eq!(*Into::<OptRc<RecursiveOne>>::into(&*r.next().as_ref().unwrap()).one(), 65);
    assert_eq!(*Into::<OptRc<RecursiveOne>>::into(&*Into::<OptRc<RecursiveOne>>::into(&*r.next().as_ref().unwrap()).next().as_ref().unwrap()).one(), 67);
    assert_eq!(*Into::<OptRc<RecursiveOne_Fini>>::into(&*Into::<OptRc<RecursiveOne>>::into(&*Into::<OptRc<RecursiveOne>>::into(&*r.next().as_ref().unwrap()).next().as_ref().unwrap()).next().as_ref().unwrap()).finisher(), 11595);
    Ok(())
}
