// Autogenerated from KST: please remove this line if doing any edits by hand!

use std::fs;
extern crate kaitai;
use self::kaitai::*;
use rust::formats::buffered_struct::*;

#[test]
fn test_buffered_struct() -> KResult<()> {
    let bytes = fs::read("../../src/buffered_struct.bin").unwrap();
    let _io = BytesReader::from(bytes);
    let r: OptRc<BufferedStruct> = BufferedStruct::read_into(&_io, None, None)?;

    assert_eq!(*r.len1(), 16);
    assert_eq!(*r.block1().number1(), 66);
    assert_eq!(*r.block1().number2(), 67);
    assert_eq!(*r.len2(), 8);
    assert_eq!(*r.block2().number1(), 68);
    assert_eq!(*r.block2().number2(), 69);
    assert_eq!(*r.finisher(), 238);
    Ok(())
}
