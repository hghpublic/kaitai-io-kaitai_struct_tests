// Autogenerated from KST: please remove this line if doing any edits by hand!

use std::fs;
extern crate kaitai;
use self::kaitai::*;
use rust::formats::imports_circular_a::*;

#[test]
fn test_imports_circular_a() -> KResult<()> {
    let bytes = fs::read("../../src/fixed_struct.bin").unwrap();
    let _io = BytesReader::from(bytes);
    let r: OptRc<ImportsCircularA> = ImportsCircularA::read_into(&_io, None, None)?;

    assert_eq!(*r.code(), 80);
    assert_eq!(*r.two().initial(), 65);
    assert_eq!(*r.two().back_ref().code(), 67);
    assert_eq!(*r.two().back_ref().two().initial(), 75);
    assert!(r.two().back_ref().two().back_ref().is_none());
    Ok(())
}
