// Autogenerated from KST: please remove this line if doing any edits by hand!

use std::fs;
extern crate kaitai;
use self::kaitai::*;
use rust::formats::instance_std_array::*;

#[test]
fn test_instance_std_array() -> KResult<()> {
    let bytes = fs::read("../../src/instance_std_array.bin").unwrap();
    let _io = BytesReader::from(bytes);
    let r: OptRc<InstanceStdArray> = InstanceStdArray::read_into(&_io, None, None)?;

    assert_eq!(*r.ofs(), 16);
    assert_eq!(*r.qty_entries(), 3);
    assert_eq!(*r.entry_size(), 4);
    assert_eq!(r.entries()?.len(), 3);
    assert_eq!(r.entries()?[0 as usize], vec![0x11u8, 0x11u8, 0x11u8, 0x11u8]);
    assert_eq!(r.entries()?[1 as usize], vec![0x22u8, 0x22u8, 0x22u8, 0x22u8]);
    assert_eq!(r.entries()?[2 as usize], vec![0x33u8, 0x33u8, 0x33u8, 0x33u8]);
    Ok(())
}
