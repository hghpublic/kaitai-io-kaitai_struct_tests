// Autogenerated from KST: please remove this line if doing any edits by hand!

#include <boost/test/unit_test.hpp>
#include "expr_str_ops.h"
#include <iostream>
#include <fstream>
#include <vector>

BOOST_AUTO_TEST_CASE(test_expr_str_ops) {
    std::ifstream ifs("src/term_strz.bin", std::ifstream::binary);
    kaitai::kstream ks(&ifs);
    expr_str_ops_t* r = new expr_str_ops_t(&ks);

    BOOST_CHECK_EQUAL(r->one(), std::string("foo|b"));
    BOOST_CHECK_EQUAL(r->one_len(), 5);
    BOOST_CHECK_EQUAL(r->one_rev(), std::string("b|oof"));
    BOOST_CHECK_EQUAL(r->one_substr_0_to_3(), std::string("foo"));
    BOOST_CHECK_EQUAL(r->one_substr_2_to_5(), std::string("o|b"));
    BOOST_CHECK_EQUAL(r->one_substr_3_to_3(), std::string(""));
    BOOST_CHECK_EQUAL(r->two(), std::string("0123456789"));
    BOOST_CHECK_EQUAL(r->two_len(), 10);
    BOOST_CHECK_EQUAL(r->two_rev(), std::string("9876543210"));
    BOOST_CHECK_EQUAL(r->two_substr_0_to_7(), std::string("0123456"));
    BOOST_CHECK_EQUAL(r->two_substr_4_to_10(), std::string("456789"));
    BOOST_CHECK_EQUAL(r->two_substr_0_to_10(), std::string("0123456789"));
    BOOST_CHECK_EQUAL(r->to_i_attr(), 9173);
    BOOST_CHECK_EQUAL(r->to_i_r10(), -72);
    BOOST_CHECK_EQUAL(r->to_i_r2(), 86);
    BOOST_CHECK_EQUAL(r->to_i_r8(), 465);
    BOOST_CHECK_EQUAL(r->to_i_r16(), 18383);

    delete r;
}
