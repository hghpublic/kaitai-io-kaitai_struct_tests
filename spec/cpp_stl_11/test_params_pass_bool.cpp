// Autogenerated from KST: please remove this line if doing any edits by hand!

#include <boost/test/unit_test.hpp>
#include "params_pass_bool.h"
#include <iostream>
#include <fstream>
#include <vector>

BOOST_AUTO_TEST_CASE(test_params_pass_bool) {
    std::ifstream ifs("src/term_strz.bin", std::ifstream::binary);
    kaitai::kstream ks(&ifs);
    params_pass_bool_t* r = new params_pass_bool_t(&ks);

    BOOST_CHECK_EQUAL(r->s_false(), false);
    BOOST_CHECK_EQUAL(r->s_true(), true);
    BOOST_CHECK_EQUAL(r->seq_b1()->arg(), true);
    BOOST_CHECK_EQUAL(r->seq_b1()->foo().length(), 1);
    BOOST_CHECK_EQUAL(r->seq_bool()->arg(), false);
    BOOST_CHECK_EQUAL(r->seq_bool()->foo().length(), 2);
    BOOST_CHECK_EQUAL(r->literal_b1()->arg(), false);
    BOOST_CHECK_EQUAL(r->literal_b1()->foo().length(), 2);
    BOOST_CHECK_EQUAL(r->literal_bool()->arg(), true);
    BOOST_CHECK_EQUAL(r->literal_bool()->foo().length(), 1);
    BOOST_CHECK_EQUAL(r->inst_b1()->arg(), true);
    BOOST_CHECK_EQUAL(r->inst_b1()->foo().length(), 1);
    BOOST_CHECK_EQUAL(r->inst_bool()->arg(), false);
    BOOST_CHECK_EQUAL(r->inst_bool()->foo().length(), 2);

    delete r;
}
