// Autogenerated from KST: please remove this line if doing any edits by hand!

#include <boost/test/unit_test.hpp>
#include "integers_double_overflow.h"
#include <iostream>
#include <fstream>
#include <vector>

BOOST_AUTO_TEST_CASE(test_integers_double_overflow) {
    std::ifstream ifs("src/integers_double_overflow.bin", std::ifstream::binary);
    kaitai::kstream ks(&ifs);
    integers_double_overflow_t* r = new integers_double_overflow_t(&ks);

    BOOST_CHECK_EQUAL(r->signed_safe_min_be(), -9007199254740991LL);
    BOOST_CHECK_EQUAL(r->signed_safe_min_le(), -9007199254740991LL);
    BOOST_CHECK_EQUAL(r->signed_safe_max_be(), 9007199254740991LL);
    BOOST_CHECK_EQUAL(r->signed_safe_max_le(), 9007199254740991LL);
    BOOST_CHECK_EQUAL(kaitai::kstream::to_string(r->signed_unsafe_neg_be()), std::string("-9007199254740993"));
    BOOST_CHECK_EQUAL(kaitai::kstream::to_string(r->signed_unsafe_neg_le()), std::string("-9007199254740993"));
    BOOST_CHECK_EQUAL(kaitai::kstream::to_string(r->signed_unsafe_pos_be()), std::string("9007199254740993"));
    BOOST_CHECK_EQUAL(kaitai::kstream::to_string(r->signed_unsafe_pos_be()), std::string("9007199254740993"));

    delete r;
}
